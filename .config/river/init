#!/bin/sh

# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.
# River will send the process group of the init executable SIGTERM on exit.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

font="FiraCode Nerd Font"
font_size=15
menu_font_size=20
norm_fg="828bb8ff"
norm_bg="1b1d2bd0"
norm_border="828bb8ff"
sele_fg="444a73ff"
sele_bg="c8d3f5d0"
sele_border="ffc777ff"

layout=rivercarro

all_tags=$(((1 << 32) - 1))
sticky_tag=$((1 << 31))
all_but_sticky_tags=$(($all_tags ^ $sticky_tag))

audio_script="$HOME/.local/bin/audio"
bright_script="$HOME/.local/bin/bright"

####################################################################################################
# basic settings
####################################################################################################
# Set background and border color
riverctl background-color 0x000000
riverctl border-color-focused 0xffc777
riverctl border-color-unfocused 0x1b1d2b
riverctl border-width 3

# Set keyboard repeat rate
riverctl set-repeat 50 300

riverctl hide-cursor timeout 3000
riverctl hide-cursor when-typing enabled

riverctl rule-add -app-id "*" ssd
riverctl rule-add -app-id "Chromium" tags $((1 << 1))
riverctl rule-add -app-id "QQ" float
riverctl rule-add -app-id "QQ" tags $((1 << 2))
riverctl rule-add -app-id "wemeetapp" float
riverctl rule-add -app-id "wemeetapp" tags $((1 << 2))
riverctl rule-add -app-id "wechat" float
riverctl rule-add -app-id "wechat" tags $((1 << 2))
riverctl rule-add -title "*微信*" tags float
riverctl rule-add -title "*微信*" tags $((1 << 2))
riverctl rule-add -app-id "virt-manager" float
riverctl rule-add -app-id "stalonetray" float

####################################################################################################
# mapping
####################################################################################################
# Super+Shift+C to close the focused view
riverctl map normal Super+Shift C close

# Super+Shift+Q to exit river
riverctl map normal Super+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Return zoom

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Control H move left 100
riverctl map normal Super+Control J move down 100
riverctl map normal Super+Control K move up 100
riverctl map normal Super+Control L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Control+Shift H snap left
riverctl map normal Super+Control+Shift J snap down
riverctl map normal Super+Control+Shift K snap up
riverctl map normal Super+Control+Shift L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Control+Alt H resize horizontal -100
riverctl map normal Super+Control+Alt J resize vertical 100
riverctl map normal Super+Control+Alt K resize vertical -100
riverctl map normal Super+Control+Alt L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

riverctl map normal Super S toggle-view-tags $sticky_tag
riverctl spawn-tagmask $all_but_sticky_tags

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $(($tags + $sticky_tag))

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+TAB to focus previous tag
riverctl map normal Super TAB focus-previous-tags

# Super+F to toggle float
riverctl map normal Super F toggle-float

# Super+M to toggle fullscreen
riverctl map normal Super+Shift F toggle-fullscreen

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super+Shift Escape enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super+Shift Escape enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    riverctl map $mode None Caps_Lock spawn "sh -c 'sleep 0.2; $HOME/.local/bin/capslock'"
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    riverctl map -repeat $mode None XF86AudioRaiseVolume  spawn "${audio_script} sink --plus"
    riverctl map -repeat $mode None XF86AudioLowerVolume  spawn "${audio_script} sink --minus"
    riverctl map $mode None XF86AudioMute         spawn "${audio_script} sink --mute"
    riverctl map -repeat $mode Super XF86AudioRaiseVolume  spawn "${audio_script} source --plus"
    riverctl map -repeat $mode Super XF86AudioLowerVolume  spawn "${audio_script} source --minus"
    riverctl map $mode Super XF86AudioMute         spawn "${audio_script} source --mute"

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    # riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    # riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    # riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    # riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    riverctl map -repeat $mode None XF86MonBrightnessUp   spawn "${bright_script} --plus"
    riverctl map -repeat $mode None XF86MonBrightnessDown spawn "${bright_script} --minus"
done

riverctl map normal Super+Shift R spawn "$HOME/.config/river/init"

riverctl map normal Super B spawn "sh -c 'kill -USR1 \$(pgrep dam)'"

riverctl map normal Super+Shift Return spawn "footclient"

riverctl map normal Super P spawn "wmenu-run \
    -ci -l 9 \
    -f '${font}, ${menu_font_size}' \
    -n ${norm_fg} -N ${norm_bg} \
    -m ${norm_fg} -M ${norm_bg} \
    -s ${sele_fg} -S ${sele_bg}"

riverctl map normal Super+Shift L spawn "waylock"

riverctl map normal None Print spawn "grim -| wl-copy && notify-send 'Screenshot taken'"
riverctl map normal Super+Shift S spawn "sh -c 'sleep 0.2; slurp | xargs -I {} grim -g {} -| wl-copy'"

riverctl map normal Super E spawn "footclient lf"

####################################################################################################
# startup
####################################################################################################
systemctl --user import-environment DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river
systemctl --user restart xdg-desktop-portal

mako &
fcitx5 &
foot --server &
gammastep -O 5000 &
$HOME/.local/bin/wobd &
$HOME/.local/bin/swaybgd &
if ! pgrep "swayidle" > /dev/null; then
    swayidle &
fi
if pgrep "dam" > /dev/null; then
    killall dam
fi
sh -c "slstatus -s | dam \
    -f '${font}:size=${font_size}' \
    -nb ${norm_bg} -nf ${norm_fg} \
    -sb ${sele_bg} -sf ${sele_fg}" &

####################################################################################################
# layout
####################################################################################################
# Set the default layout generator
riverctl default-layout $layout

# Super+H and Super+L to decrease/increase the main ratio
riverctl map normal Super H send-layout-cmd $layout "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd $layout "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count
riverctl map normal Super equal send-layout-cmd $layout "main-count +1"
riverctl map normal Super minus send-layout-cmd $layout "main-count -1"

# Super+{K,L,J,H} to change layout orientation
riverctl map normal Super+Alt K send-layout-cmd $layout "main-location top"
riverctl map normal Super+Alt L send-layout-cmd $layout "main-location right"
riverctl map normal Super+Alt J send-layout-cmd $layout "main-location bottom"
riverctl map normal Super+Alt H send-layout-cmd $layout "main-location left"

killall rivercarro rivertile
if [ "$layout" == "rivercarro" ]; then
    riverctl map normal Super M send-layout-cmd rivercarro "main-location monocle"
    riverctl map normal Super Space send-layout-cmd rivercarro "main-location-cycle left,monocle"
    rivercarro -main-ratio 0.55 -inner-gaps 6 -outer-gaps 6 -no-smart-gaps -per-tag &
elif [ "$layout" == "rivertile" ]; then
    rivertile -main-ratio 0.55 -view-padding 6 -outer-padding 6 &
fi

